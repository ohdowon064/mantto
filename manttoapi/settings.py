"""
Django settings for manttoapi project.

Generated by 'django-admin startproject' using Django 3.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""


import os
import datetime
from manttoapi import my_settings

SECRET_KEY = my_settings.SECRET_KEY

AUTH_USER_MODEL = 'mtuser.User'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # django app
    'mtuser.apps.MtuserConfig', # mtuser app
    
    # module
    'rest_framework', # djangorestframework
    'rest_framework_jwt', # djangorestframework-jwt
    'corsheaders', # django-cors-headers
    'drf_yasg', # drf-yasg django API Document
    'django_s3_storage', # django-s3-storage django s3 module for static files of drf-yasg
]

# corsheader settings
CORS_ORIGIN_ALLOW_ALL = True # If this is used then `CORS_ORIGIN_WHITELIST` will not have any effect
CORS_ALLOW_CREDENTIALS = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'manttoapi.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'manttoapi.wsgi.application'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ko'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# django JWT setting
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    # default athentication class에 JWT를 지정하면 모든 요청에 대해서 헤더의 Authorization의 토큰값을 확인한다.
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_jwt.authentication.JSONWebTokenAuthentication', # Authoriazation으로 JWT 사용등록
        # 'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ),
}

JWT_AUTH = {
    'JWT_SECRET_KEY': SECRET_KEY, # JWT 비밀키로 django 비밀키를 사용
    'JWT_ALGORITHM': 'HS256', # 토큰 암호화 알고리즘으로 HS256알고리즘 사용
    'JWT_ALLOW_REFRESH': True, # JWT 토큰을 갱신가능 여부
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=1), # JWT 토큰의 유효기간. 7일안에 갱신하지않으면 JWT 토큰을 사용할 수 없어 로그아웃된다.
    'JWT_REFRESH_EXPIRATION_DELTA': datetime.timedelta(days=1), # 갱신유효기간. 28일이 지나면 갱신해도 갱신할 수 없다. 28일 후에는 로그아웃처리된다.
}

SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "Basic": {"type": "basic"},
        "Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"},
    }
}

REDOC_SETTINGS = {
    "LAZY_RENDERING": False,
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
PROJECT_DIR = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_DIR, "static")
STATIC_URL = "/static/"

AWS_S3_BUCKET_NAME_STATIC = "mantto-static"
AWS_S3_CUSTOM_DOMAIN = f"{AWS_S3_BUCKET_NAME_STATIC}.s3.ap-northeast-2.amazonaws.com"
STATICFILES_STORAGE = "django_s3_storage.storage.StaticS3Storage"

EMAIL_BACKENT= 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST= 'smtp.gmail.com'
EMAIL_HOST_USER= 'manttoproject@gmail.com'
EMAIL_HOST_PASSWORD= '!aksEh3983'
EMAIL_PORT= 587
EMAIL_USE_TLS= True
DEFAULT_FROM_EMAIL= EMAIL_HOST_USER